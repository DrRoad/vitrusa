"0","write_csv(surf.m, file.path(Rout,""Test.surface.csv""))"
"0","#remove soil with no comparison"
"0","#include depth as a factor"
"0","d.s <- Wd %>% "
"0","  filter(Prop %in% Properties & Soil != ""Feliciana"")%>%"
"0","  mutate(Depth = as.factor(hor_top))"
"0","ds.n <- d.s %>%"
"0","   group_by(Prop)%>%"
"0","  nest()"
"0","#function for glm model "
"0","fit_mod <- function(data){"
"0","    mod <- lm(Value ~ Comp * Soil * Depth, data = data)"
"0","    return(anova(mod))"
"0","  }"
"0","#check that output is appropriate"
"0","# "
"0"," fit_mod(ds.n$data[[1]])"
"1","Analysis of Variance Table
"
"1","
"
"1","Response: Value"
"1","
"
"1","               "
"1"," Df"
"1"," Sum Sq"
"1"," Mean Sq"
"1"," F value"
"1","    Pr(>F)"
"1","    "
"1","
Comp           "
"1","  1"
"1"," 256.00"
"1","  256.00"
"1"," 16.5161"
"1"," 0.0036133"
"1"," ** "
"1","
Soil           "
"1","  1"
"1"," 420.25"
"1","  420.25"
"1"," 27.1129"
"1"," 0.0008154"
"1"," ***"
"1","
Depth          "
"1","  1"
"1","  30.25"
"1","   30.25"
"1","  1.9516"
"1"," 0.1999461"
"1","    "
"1","
Comp:Soil      "
"1","  1"
"1"," 144.00"
"1","  144.00"
"1","  9.2903"
"1"," 0.0158691"
"1"," *  "
"1","
Comp:Depth     "
"1","  1"
"1","  49.00"
"1","   49.00"
"1","  3.1613"
"1"," 0.1132953"
"1","    "
"1","
Soil:Depth     "
"1","  1"
"1","  20.25"
"1","   20.25"
"1","  1.3065"
"1"," 0.2860882"
"1","    "
"1","
Comp:Soil:Depth"
"1","  1"
"1","   4.00"
"1","    4.00"
"1","  0.2581"
"1"," 0.6251604"
"1","    "
"1","
Residuals      "
"1","  8"
"1"," 124.00"
"1","   15.50"
"1","        "
"1","          "
"1","    "
"1","
"
"1","---
Signif. codes:  "
"1","0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1"
"1","
"
"0","# #"
"0","depth.soil.n <- ds.n %>%"
"0","   mutate(mod = purrr::map(data, fit_mod))"
"0","# #"
"0","#surf.n$mod[[1]]"
"0","# #"
"0","#   broom::glance(surf.n$mod[[1]])"
"0","#   broom::tidy(surf.n$mod[[1]])"
"0","  "
"0","depth.soil <- depth.soil.n %>%"
"0","                 dplyr::mutate(tidy = purrr::map(mod, broom::tidy),"
"0","                               n = purrr::map(data, nrow) %>% simplify())"
"0","  "
"0","depth.soil.m <- depth.soil %>%"
"0","                   tidyr::unnest(tidy) "
"0","                  # dplyr::select(-(std.error:p.value)) %>%"
"0","                  # tidyr::spread(term, estimate)"
"0","                "
"0","write_csv(depth.soil.m, file.path(Rout,""Test.Depth_Soil.csv""))"
"0","###should really do this with mixed moedl"
"0","# A.M <- Wd %>% "
"0","#   filter(Prop %in% Properties) %>%"
"0","#   mutate(Comp = factor(Comp, levels = c('CT-C/S', 'RT-C/S', 'Grass'))) %>%"
"0","#   filter(Soil == ""Leen"" & comp %in% c(""A Horizons"", ""B Horizons"")) %>%"
"0","#   group_by(Comp, Comp, Prop, comp) %>%"
"0","#   summarise(Value = mean(Value, na.rm=TRUE))"
"0","# "
"0","# "
"0","# A.lm.mc <- A.M %>%  filter(comp %in% c(""A Horizons""))%>%"
"0","#    group_by(Prop)%>%"
"0","#   nest()"
"0","# "
"0","# #function for glm model "
"0","# fit_mod <- function(data){"
"0","#     mod <- lm(Value ~ Comp, random=~1|Comp, data = data)"
"0","#     return(anova(mod))"
"0","# }"
"0","# "
"0","# "
"0","# #check that output is appropriate"
"0","# "
"0","# fit_mod(A.lm.mc$data[[1]])"
"0","#  "
"0","# A.lm.mc <- A.lm.mc %>%"
"0","#    mutate(mod = purrr::map(data, fit_mod))"
"0","# "
"0","# A.lm.mc$mod[[1]]"
"0","#  "
"0","#    # broom::glance(surf.n$mod[[1]])"
"0","#    # broom::tidy(surf.n$mod[[1]])"
"0","# "
"0","# "
"0","# comp.A <- A.lm.mc %>%"
"0","#                  dplyr::mutate(tidy = purrr::map(mod, broom::tidy),"
"0","#                                n = purrr::map(data, nrow) %>% simplify())"
"0","# "
"0","# comp.A"
"0","#   "
"0","# comp.A <- comp.A %>%"
"0","#                    tidyr::unnest(tidy) "
"0","#                   # dplyr::select(-(std.error:p.value)) %>%"
"0","#                   # tidyr::spread(term, estimate)"
"0","#                   # "
"0","# comp.A"
"0","# "
"0","# PropertiesB <- c('WaterSol_P', 'Mehlich3_P', 'Tot_P', 'NewZ_P', 'Pom_C', 'CALC_SOC', 'Tot_N', 'Pom_N','BulkDensity', 'pH_H20', 'CEC_ph7')"
"0","# "
"0","# B.M <- Wd %>% "
"0","#   filter(Prop %in% PropertiesB) %>%"
"0","#   mutate(Comp = factor(Comp, levels = c('CT-C/S', 'RT-C/S', 'Grass'))) %>%"
"0","#   filter(Soil == ""Leen"" & comp %in% c(""A Horizons"", ""B Horizons"")) %>%"
"0","#   group_by(Comp, Comp, Prop, comp) %>%"
"0","#   summarise(Value = mean(Value, na.rm=TRUE))"
"0","# "
"0","# "
"0","# B.lm.mc <- B.M %>%  filter(comp %in% c(""B Horizons""))%>%"
"0","#    group_by(Prop)%>%"
"0","#   nest()"
"0","# "
"0","# #function for glm model "
"0","# fit_mod <- function(data){"
"0","#     mod <- lm(Value ~ Comp, random=~1|Comp, data = data)"
"0","#     return(anova(mod))"
"0","# }"
"0","# "
"0","# "
"0","# #check that output is appropriate"
"0","# "
"0","# fit_mod(B.lm.mc$data[[1]])"
"0","#  "
"0","# B.lm.mc <- B.lm.mc %>%"
"0","#    mutate(mod = purrr::map(data, fit_mod))"
"0","# "
"0","# B.lm.mc$mod[[1]]"
"0","#  "
"0","#    # broom::glance(surf.n$mod[[1]])"
"0","#    # broom::tidy(surf.n$mod[[1]])"
"0","# "
"0","# "
"0","# comp.B <- B.lm.mc %>%"
"0","#                  dplyr::mutate(tidy = purrr::map(mod, broom::tidy),"
"0","#                                n = purrr::map(data, nrow) %>% simplify())"
"0","# "
"0","# comp.B"
"0","#   "
"0","# comp.B <- comp.B %>%"
"0","#                    tidyr::unnest(tidy) "
"0","#                   # dplyr::select(-(std.error:p.value)) %>%"
"0","#                   # tidyr::spread(term, estimate)"
"0","#                   # "
"0","# comp.B"
"0","   "
