<!-- 
ideas:
http://landeco2point0.wordpress.com/2013/11/07/r-studio-and-presentations-and-git-oh-my/
http://rstudio-pubs-static.s3.amazonaws.com/27777_55697c3a476640caa0ad2099fe914ae5.html
https://r-forge.r-project.org/scm/viewvc.php/*checkout*/docs/aqp/gen-hz-assignment.html?root=aqp
-->


```{r setup, echo=FALSE, results='hide'}
opts_chunk$set(message=FALSE, warning=FALSE, dpi=120, fig.align='center', dev='CairoPNG', dev.args=list(pointsize=10), tidy=TRUE, tidy.opts=list(width.cutoff=100), cache=TRUE)
library(knitr)
library(soilDB)
```


Soil Data Aggregation using R
========================================================
transition: none
width: 1024
height: 800
css: custom.css

<br><br><br><br><br><br><br><br><br>
<span style="color: white; font-size:75%;">This document is based on:</span>
<ul style="color: white; font-size:75%;">
<li>`aqp` version `r utils::packageDescription("aqp", field="Version")`</li>
<li>`soilDB` version `r utils::packageDescription("soilDB", field="Version")`</li>
<li>`sharpshootR` version `r utils::packageDescription("sharpshootR", field="Version")`</li>
</ul>

What is R?
================
- an analysis platform: calculator, statistics program, gis, etc...
- R syntax: vocabulary to explore, summarize, and model data
![alt text](static-figures/rstudio.png)


What is R?
================
- an integrator: anaylsis + GIS + database connectivity
- ODBC and GDAL link R to nearly all possible formats/interfaces
![alt text](static-figures/triangle.png)


What can R do?
========================================================
- Base R (*functionality is extended through packages*)
  - basic summaries of quantitative or qualitative data
  - data exploration via graphics
  - GIS data processing and analysis

- Integrated Workflow (*self-documenting, repeatable*)
  - report writing: code + summaries in a single document
  - digital soil mapping: modeling properties and classes
  - evaluation of OSD, KSSL, NASIS, ... for SDJR or related

- Soil Science Specific Packages
  - visualization, aggregation, classification <span class="link-to-details">&#8594;&nbsp;[aqp package](http://aqp.r-forge.r-project.org/aqp-html-manual/index.html)</span>
  - access to commonly used soil databases <span class="link-to-details">&#8594;&nbsp;[soilDB package](http://aqp.r-forge.r-project.org/soilDB-html-manual/index.html)</span>
  - misc. soil survey specific functions <span class="link-to-details">&#8594;&nbsp;[sharpshootR package](http://aqp.r-forge.r-project.org/shapshootR-html-manual/index.html)</span>
 

What can R do?
========================================================

<br><br>
![alt text](static-figures/loafercreek-ml-hz.png)
<br><br>
<center>**estimate a most-likely horizonation, details to follow**</center>

What can R do?
========================================================

<br><br>
![alt text](static-figures/loafercreek-ric.png)
<br><br>
<center>**estimate a reasonable RIC, details to follow**</center>

Setup your local machine
========================================================

- Be sure to follow embedded links to full documentation.
- Check out the [AQP project website](http://aqp.r-forge.r-project.org/).
- You can reproduce much of this document with:

 - the first time you run R
```{r install-packages, tidy=FALSE, eval=FALSE}
install.packages('aqp', dep=TRUE) 
install.packages("RODBC", dep=TRUE)
install.packages('soilDB', dep=TRUE)
```

 - every time you run R
```{r make-repeatable, tidy=FALSE}
# load libraries
library(aqp)
library(soilDB)
library(lattice)
library(plyr)
library(Hmisc)
library(RColorBrewer)

# set options
options(width=100, stringsAsFactors=FALSE)
```


ODBC Setup
========================================================
- establish an Open Database Connection (ODBC) to NASIS

- connection allows R to pull data from a NASIS selected set via the soilDB package

- connection sets up a small file that stores the NASIS login and password

- this is a one-time operation
  - easy to follow instructions are found here:

<span class="link-to-details">&#8594;&nbsp;[ODBC setup instructions](https://r-forge.r-project.org/scm/viewvc.php/*checkout*/docs/soilDB/setup_local_nasis.html?root=aqp)</span>




Aggregation of Pedon Data: Common Problems
========================================================
![alt text](static-figures/genhz-sketch.png)

- description styles
 - the age-old splitters vs. lumpers
 - use of transitional horizons
  - I say tomato, you say tomato!  
  
- legacy horizon nominclature
 - old school meets new school and they ain't speakin' the same language.....

- soils described to varying depths - it's the pits!


Generalized Horizon Labels: Micro-correlation
========================================================
![alt text](static-figures/genhz-sketch.png)

- generalized horizon labels = GHL
- determine the core concept 
- which way do transition horizons go?
 - GHL process allows for flexibility
- horizon redundancy - how many Bt horizons are necessary?
- outlier horizons - what happens to them?


Summary of GHL workflow
========================================================

<center>**Most of these steps are implemented in the reports presented last**</center>

1. Select a set of GHL that best represents a group of pedons to be aggregated.

2. Assign GHL to each horizon using whatever information is available for grouping horizons.

3. Evaluate GHL assignments and manually refine as needed.

4. Keep track of final GHL assignments in NASIS or text file.

5. Estimate a most likely horizonation e.g., top and bottom depths for each generalized horizon label.

6. Compute range in characteristics, aka low-rv-high values, for clay, sand, pH, etc. over GHL. (next document in this series)

[&#8594;&nbsp;extended tutorial](https://r-forge.r-project.org/scm/viewvc.php/*checkout*/docs/aqp/gen-hz-assignment.html?root=aqp)



Assumptions
========================================================
- a collection of pedons for a component should represent an aggregated component
- a GHL process of some kind is required to efficiently summarize and aggregate horizon data from these collections
- low-rv-high values must be tied to some metric: 
 - 5th-50th-95th percentile is one option
- linked pedons represent examples of the aggregate data, but aggregate data should not be limited to a very small set of linked pedons

- **IMPORTANT POINT:** these reports and data summaries are a useful starting point for the aggregation process


A Sample Dataset
=======================================================

```{r load-data, fig.width=12, fig.height=5, htmlcap='15 pedons correlated to the Loafercreek soil series.', echo=TRUE}
# load sample data from the soilDB package
data(loafercreek, package = 'soilDB')
# keep only the first 15 pedons
pedons <- loafercreek[1:15, ]
# plot profile sketches
par(mar=c(0,0,0,0))
plot(pedons, name='hzname', print.id=FALSE, cex.names=0.8, axis.line.offset=-4)
```

Horizonation: a first look.....
========================================================
- Look up the OSD RIC if one exist

![alt text](static-figures/RIC.png)

Horizonation: a first look.....
========================================================

- sort by frequency
```{r}
sort(table(loafercreek$hzname), decreasing=TRUE)[1:13]
sort(table(loafercreek$hzname), decreasing=TRUE)[14:26]
```
- sort alphabetically
```{r}
sort(table(loafercreek$hzname))[1:13]
sort(table(loafercreek$hzname))[14:26]
```

Horizonation: a first look.....
========================================================

- array collective horizonation by depth mid points

```{r horizon_counts, fig.width=10, fig.height=6}
loafercreek$mid <- with(horizons(loafercreek), (hzdept + hzdepb) / 2) # compute horizon mid-points
hz.mid.depths <- names(sort(tapply(loafercreek$mid, loafercreek$hzname, median))) # sort by mid-points
bwplot(mid ~ factor(hzname, levels=hz.mid.depths), data=horizons(loafercreek), ylim = c(155, -5), ylab='Horizon Mid-Point Depth (cm)') # plot by horizon mid-points
```


Determination of a GHL Template and Rules
========================================================
- pattern matching via [regular expression](http://www.regexr.com/) (REGEX)
 - this is where most micro-correlation decisions are stored
- special characters in REGEX rules: 
 - `|` = "or"
 - `^` = anchor to left-side
 - `$` = anchor to right-side

```{r, tidy=FALSE}
# save our GHL
n <- c('A',
       'Bt1',
       'Bt2',
       'Bt3',
       'Cr',
       'R')
# REGEX rules
p <- c('^A$|Ad|Ap',
       'Bt1$',
       '^Bt2$',
       '^Bt3|^Bt4|CBt$|BCt$|2Bt|2CB$|^C$',
       'Cr',
       'R')
```

Assignment of GHL
========================================================
```{r}
loafercreek$genhz <- generalize.hz(loafercreek$hzname, n, p) 
addmargins(table(loafercreek$genhz, loafercreek$hzname))[, 1:13] # cross-tabulate original horizon designations and GHL
addmargins(table(loafercreek$genhz, loafercreek$hzname))[, 14:29]
```


Evaluation of GHL 1
========================================================
```{r}
n <- length(levels(loafercreek$genhz))
cols <- brewer.pal(n, name="Paired")
hz.names <- levels(loafercreek$genhz)
loafercreek$genhz.col <- cols[match(loafercreek$genhz, hz.names)]
plot(loafercreek[1:15], color='genhz.soil_color', label='pedon_id') # plot the first 15 profiles
```


Evaluation of GHL 2
========================================================
```{r}
h <- horizons(loafercreek)
bwplot(mid~genhz, data=h, ylim=c(155, -5), ylab="Depths (cm)", xlab="Generalized horizons")
```


Evaluation of GHL 3
========================================================
```{r}
hz.eval <- evalGenHZ(loafercreek, 'genhz', c('clay', 'mid', 'total_frags_pct'))
# extract MDS coords
loafercreek$mds.1 <- hz.eval$horizons$mds.1; loafercreek$mds.2 <- hz.eval$horizons$mds.2
# convert pedons to a data.frame
pedons.df <- as(loafercreek, 'data.frame')
```


Evaluation of GHL 3
========================================================
```{r}
plot(mds.2 ~ mds.1, data=pedons.df, pch=19, col=loafercreek$genhz.col)
legend("bottomleft", levels(pedons.df$genhz), pch=19, col=loafercreek$genhz.col)
```

Importing GHL to NASIS
========================================================




Report Demo
========================================================




Summarizing Data with Quantiles (Percentiles)
========================================================

```{r quantiles-normal-dist, fig.width=11, fig.height=6, echo=FALSE}
# simulate 500 values from the normal distribution: with mean = 10, sd= 2
set.seed(1010101)
x <- rnorm(n=500, mean = 10, sd=2)

# compute the 5th, 25th, 50th, 75th, and 95th percentiles of x
q <- c(quantile(x, probs=c(0.05, 0.25, 0.5, 0.75, 0.95)))

# plot a smoothed frequency distribution
plot(density(x), main=list('Normal Distibution', cex=2), ylim=c(0, 0.8), ylab='', xlab='', axes=FALSE)

# mark quantiles we computed above
abline(v=q, lty=3, col='red')
text(x=q, y=0.1, labels=c('5th', '25th', '50th', '75th', '95th'), cex=1.5)

# overlay a box-whisker plot
boxplot(x, at=0.35, add=TRUE, horizontal=TRUE, boxwex=0.1, border='DarkBlue', axes=FALSE)

# overlay lines at the original values
rug(x, side=3, col='DarkBlue')

# overlay mean +/- 2SD
points(mean(x), y=0.45, pch=0, col='darkgreen', cex=2, lwd=2)
points(mean(x) + c(2*sd(x), -2*sd(x)), y=c(0.45, 0.45), pch=0, col='darkgreen', cex=2, lwd=2)

# add x-axis
axis(side=1, at=pretty(x), cex.axis=1.5)
```
blue: quantiles, green: mean +/- 2SD


Summarizing Data with Quantiles (Percentiles)
========================================================

```{r quantiles-exp-dist, fig.width=11, fig.height=6, echo=FALSE}
# simulate 500 values from the exponential distribution
set.seed(1010101)
x <- rexp(n=500)

# compute the 5th, 25th, 50th, 75th, and 95th percentiles of x
q <- c(quantile(x, probs=c(0.05, 0.25, 0.5, 0.75, 0.95)))

# plot a smoothed frequency distribution
plot(density(x), main=list('Long-Tailed Distibution', cex=2), ylim=c(0, 0.8), ylab='', xlab='', axes=FALSE)

# mark quantiles we computed above
abline(v=q, lty=3, col='red')
text(x=q, y=c(0.1, 0.15, 0.1, 0.15, 0.1), labels=c('5th', '25th', '50th', '75th', '95th'), cex=1.5)

# overlay a box-whisker plot
boxplot(x, at=0.35, add=TRUE, horizontal=TRUE, boxwex=0.1, border='DarkBlue', axes=FALSE)

# overlay lines at the original values
rug(x, side=3, col='DarkBlue')

# overlay mean +/- 2SD
points(mean(x), y=0.45, pch=0, col='darkgreen', cex=2, lwd=2)
points(mean(x) + c(2*sd(x), -2*sd(x)), y=c(0.45, 0.45), pch=0, col='darkgreen', cex=2, lwd=2)

# add x-axis
axis(side=1, at=pretty(x), cex.axis=1.5)
```
blue: quantiles, green: mean +/- 2SD



Thank You
========================================================
**Questions, comments, ideas**
<br><br>

**R resources for pedologists**
- <span class="link-to-details">&#8594;&nbsp;[NCSS Job-Aids](http://www.nrcs.usda.gov/wps/portal/nrcs/detail/soils/edu/ncss/?cid=nrcs142p2_054322)</span>
- <span class="link-to-details">&#8594;&nbsp;[aqp tutorials](http://aqp.r-forge.r-project.org/)</span>
- <span class="link-to-details">&#8594;&nbsp;[Statistical data analysis for pedologists](http://www2.gru.wvu.edu/~tdavello/files/stats/table_of_contents.html)
- <span class="link-to-details">&#8594;&nbsp;[Dylan Beaudette's blog](http://casoilresource.lawr.ucdavis.edu/blog/)
- <span class="link-to-details">&#8594;&nbsp;[soil-pit Github repository](https://github.com/sroecker01/soil-pit)
<br><br>

**Additional AQP Contributors:**
- Pierre Roudier (Landcare Research)


